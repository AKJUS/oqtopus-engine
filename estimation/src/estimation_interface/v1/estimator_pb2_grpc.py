# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc

from estimation_interface.v1 import (
    estimator_pb2 as estimation__interface_dot_v1_dot_estimator__pb2,
)


class EstimationJobServiceStub(object):
    """RPC service for Estimation Job"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ReqEstimationPreProcess = channel.unary_unary(
            "/estimation_interface.v1.EstimationJobService/ReqEstimationPreProcess",
            request_serializer=estimation__interface_dot_v1_dot_estimator__pb2.ReqEstimationPreProcessRequest.SerializeToString,
            response_deserializer=estimation__interface_dot_v1_dot_estimator__pb2.ReqEstimationPreProcessResponse.FromString,
            _registered_method=True,
        )
        self.ReqEstimationPostProcess = channel.unary_unary(
            "/estimation_interface.v1.EstimationJobService/ReqEstimationPostProcess",
            request_serializer=estimation__interface_dot_v1_dot_estimator__pb2.ReqEstimationPostProcessRequest.SerializeToString,
            response_deserializer=estimation__interface_dot_v1_dot_estimator__pb2.ReqEstimationPostProcessResponse.FromString,
            _registered_method=True,
        )


class EstimationJobServiceServicer(object):
    """RPC service for Estimation Job"""

    def ReqEstimationPreProcess(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ReqEstimationPostProcess(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_EstimationJobServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "ReqEstimationPreProcess": grpc.unary_unary_rpc_method_handler(
            servicer.ReqEstimationPreProcess,
            request_deserializer=estimation__interface_dot_v1_dot_estimator__pb2.ReqEstimationPreProcessRequest.FromString,
            response_serializer=estimation__interface_dot_v1_dot_estimator__pb2.ReqEstimationPreProcessResponse.SerializeToString,
        ),
        "ReqEstimationPostProcess": grpc.unary_unary_rpc_method_handler(
            servicer.ReqEstimationPostProcess,
            request_deserializer=estimation__interface_dot_v1_dot_estimator__pb2.ReqEstimationPostProcessRequest.FromString,
            response_serializer=estimation__interface_dot_v1_dot_estimator__pb2.ReqEstimationPostProcessResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "estimation_interface.v1.EstimationJobService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers(
        "estimation_interface.v1.EstimationJobService", rpc_method_handlers
    )


# This class is part of an EXPERIMENTAL API.
class EstimationJobService(object):
    """RPC service for Estimation Job"""

    @staticmethod
    def ReqEstimationPreProcess(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/estimation_interface.v1.EstimationJobService/ReqEstimationPreProcess",
            estimation__interface_dot_v1_dot_estimator__pb2.ReqEstimationPreProcessRequest.SerializeToString,
            estimation__interface_dot_v1_dot_estimator__pb2.ReqEstimationPreProcessResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )

    @staticmethod
    def ReqEstimationPostProcess(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/estimation_interface.v1.EstimationJobService/ReqEstimationPostProcess",
            estimation__interface_dot_v1_dot_estimator__pb2.ReqEstimationPostProcessRequest.SerializeToString,
            estimation__interface_dot_v1_dot_estimator__pb2.ReqEstimationPostProcessResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True,
        )
