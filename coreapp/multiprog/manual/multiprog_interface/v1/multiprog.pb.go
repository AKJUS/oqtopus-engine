// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: multiprog_interface/v1/multiprog.proto

package multiprog_interfacev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Status int32

const (
	Status_STATUS_SUCCESS            Status = 0
	Status_STATUS_FAILURE            Status = 1
	Status_STATUS_INVALID_QUBIT_SIZE Status = 2
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "STATUS_SUCCESS",
		1: "STATUS_FAILURE",
		2: "STATUS_INVALID_QUBIT_SIZE",
	}
	Status_value = map[string]int32{
		"STATUS_SUCCESS":            0,
		"STATUS_FAILURE":            1,
		"STATUS_INVALID_QUBIT_SIZE": 2,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_multiprog_interface_v1_multiprog_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_multiprog_interface_v1_multiprog_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_multiprog_interface_v1_multiprog_proto_rawDescGZIP(), []int{0}
}

// request to circuit_combiner of gRPC server
type CombineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// string of json array
	// example: "{\\\"qasm\\\": [\\\"OPENQASM 3;\\ninclude \\\\\"stdgates.inc\\\\\";\\nqubit[2] q;\\n\\nh q[0];\\nx q[0];\\ncx q[0], q[1];\\\", \\\"OPENQASM 3;\\ninclude \\\\\"stdgates.inc\\\\\";\\nqubit[2] q;\\n\\nh q[0];\\nx q[0];\\ncx q[0], q[1];\\\"]}" # noqa
	QasmArray string `protobuf:"bytes,1,opt,name=qasm_array,json=qasmArray,proto3" json:"qasm_array,omitempty"`
	// device information like "qubit_index" or "measurement_windows_index"
	MaxQubits int32 `protobuf:"varint,2,opt,name=max_qubits,json=maxQubits,proto3" json:"max_qubits,omitempty"`
}

func (x *CombineRequest) Reset() {
	*x = CombineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_multiprog_interface_v1_multiprog_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CombineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombineRequest) ProtoMessage() {}

func (x *CombineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_multiprog_interface_v1_multiprog_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombineRequest.ProtoReflect.Descriptor instead.
func (*CombineRequest) Descriptor() ([]byte, []int) {
	return file_multiprog_interface_v1_multiprog_proto_rawDescGZIP(), []int{0}
}

func (x *CombineRequest) GetQasmArray() string {
	if x != nil {
		return x.QasmArray
	}
	return ""
}

func (x *CombineRequest) GetMaxQubits() int32 {
	if x != nil {
		return x.MaxQubits
	}
	return 0
}

// response from circuit_combiner of gRPC server
type CombineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// status of the response
	CombinedStatus Status `protobuf:"varint,1,opt,name=combined_status,json=combinedStatus,proto3,enum=multiprog_interface.v1.Status" json:"combined_status,omitempty"`
	// combined circuit qasm
	CombinedQasm string `protobuf:"bytes,2,opt,name=combined_qasm,json=combinedQasm,proto3" json:"combined_qasm,omitempty"`
	// combined qasm bit information
	CombinedQubitsList []int32 `protobuf:"varint,3,rep,packed,name=combined_qubits_list,json=combinedQubitsList,proto3" json:"combined_qubits_list,omitempty"`
}

func (x *CombineResponse) Reset() {
	*x = CombineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_multiprog_interface_v1_multiprog_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CombineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CombineResponse) ProtoMessage() {}

func (x *CombineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_multiprog_interface_v1_multiprog_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CombineResponse.ProtoReflect.Descriptor instead.
func (*CombineResponse) Descriptor() ([]byte, []int) {
	return file_multiprog_interface_v1_multiprog_proto_rawDescGZIP(), []int{1}
}

func (x *CombineResponse) GetCombinedStatus() Status {
	if x != nil {
		return x.CombinedStatus
	}
	return Status_STATUS_SUCCESS
}

func (x *CombineResponse) GetCombinedQasm() string {
	if x != nil {
		return x.CombinedQasm
	}
	return ""
}

func (x *CombineResponse) GetCombinedQubitsList() []int32 {
	if x != nil {
		return x.CombinedQubitsList
	}
	return nil
}

var File_multiprog_interface_v1_multiprog_proto protoreflect.FileDescriptor

var file_multiprog_interface_v1_multiprog_proto_rawDesc = []byte{
	0x0a, 0x26, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x72, 0x6f, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x72,
	0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x72, 0x6f, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x22, 0x4e, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x61, 0x73, 0x6d, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x61, 0x73, 0x6d, 0x41, 0x72, 0x72, 0x61,
	0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x71, 0x75, 0x62, 0x69, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x51, 0x75, 0x62, 0x69, 0x74, 0x73,
	0x22, 0xb1, 0x01, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x64,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x72, 0x6f, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66,
	0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0e, 0x63,
	0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x71, 0x61, 0x73, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x64, 0x51, 0x61,
	0x73, 0x6d, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x71,
	0x75, 0x62, 0x69, 0x74, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x12, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x64, 0x51, 0x75, 0x62, 0x69, 0x74, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x2a, 0x4f, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12,
	0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53,
	0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49,
	0x4c, 0x55, 0x52, 0x45, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x51, 0x55, 0x42, 0x49, 0x54, 0x5f, 0x53,
	0x49, 0x5a, 0x45, 0x10, 0x02, 0x32, 0x74, 0x0a, 0x16, 0x43, 0x69, 0x72, 0x63, 0x75, 0x69, 0x74,
	0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x5a, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x12, 0x26, 0x2e, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x72, 0x6f, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x27, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x72, 0x6f, 0x67, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x62,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xe0, 0x01, 0x0a, 0x1a,
	0x63, 0x6f, 0x6d, 0x2e, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x72, 0x6f, 0x67, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x0e, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x72, 0x6f, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3d, 0x6d, 0x75,
	0x6c, 0x74, 0x69, 0x70, 0x72, 0x6f, 0x67, 0x2f, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x2f, 0x6d,
	0x75, 0x6c, 0x74, 0x69, 0x70, 0x72, 0x6f, 0x67, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61,
	0x63, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x72, 0x6f, 0x67, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x4d, 0x58,
	0x58, 0xaa, 0x02, 0x15, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x72, 0x6f, 0x67, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x15, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x72, 0x6f, 0x67, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5c, 0x56,
	0x31, 0xe2, 0x02, 0x21, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x72, 0x6f, 0x67, 0x49, 0x6e, 0x74,
	0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x16, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x72, 0x6f,
	0x67, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_multiprog_interface_v1_multiprog_proto_rawDescOnce sync.Once
	file_multiprog_interface_v1_multiprog_proto_rawDescData = file_multiprog_interface_v1_multiprog_proto_rawDesc
)

func file_multiprog_interface_v1_multiprog_proto_rawDescGZIP() []byte {
	file_multiprog_interface_v1_multiprog_proto_rawDescOnce.Do(func() {
		file_multiprog_interface_v1_multiprog_proto_rawDescData = protoimpl.X.CompressGZIP(file_multiprog_interface_v1_multiprog_proto_rawDescData)
	})
	return file_multiprog_interface_v1_multiprog_proto_rawDescData
}

var file_multiprog_interface_v1_multiprog_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_multiprog_interface_v1_multiprog_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_multiprog_interface_v1_multiprog_proto_goTypes = []interface{}{
	(Status)(0),             // 0: multiprog_interface.v1.Status
	(*CombineRequest)(nil),  // 1: multiprog_interface.v1.CombineRequest
	(*CombineResponse)(nil), // 2: multiprog_interface.v1.CombineResponse
}
var file_multiprog_interface_v1_multiprog_proto_depIdxs = []int32{
	0, // 0: multiprog_interface.v1.CombineResponse.combined_status:type_name -> multiprog_interface.v1.Status
	1, // 1: multiprog_interface.v1.CircuitCombinerService.Combine:input_type -> multiprog_interface.v1.CombineRequest
	2, // 2: multiprog_interface.v1.CircuitCombinerService.Combine:output_type -> multiprog_interface.v1.CombineResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_multiprog_interface_v1_multiprog_proto_init() }
func file_multiprog_interface_v1_multiprog_proto_init() {
	if File_multiprog_interface_v1_multiprog_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_multiprog_interface_v1_multiprog_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CombineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_multiprog_interface_v1_multiprog_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CombineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_multiprog_interface_v1_multiprog_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_multiprog_interface_v1_multiprog_proto_goTypes,
		DependencyIndexes: file_multiprog_interface_v1_multiprog_proto_depIdxs,
		EnumInfos:         file_multiprog_interface_v1_multiprog_proto_enumTypes,
		MessageInfos:      file_multiprog_interface_v1_multiprog_proto_msgTypes,
	}.Build()
	File_multiprog_interface_v1_multiprog_proto = out.File
	file_multiprog_interface_v1_multiprog_proto_rawDesc = nil
	file_multiprog_interface_v1_multiprog_proto_goTypes = nil
	file_multiprog_interface_v1_multiprog_proto_depIdxs = nil
}
