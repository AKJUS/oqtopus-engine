jobs:
  get:
    tags:
      - jobs
    summary: Search jobs for a device
    description: Search jobs for a device
    operationId: get_jobs
    parameters:
      - in: query
        name: device_id
        required: true
        description: "Device identifier"
        schema:
          type: string
          nullable: false
          example: "Kawasaki"
      - in: query
        name: status
        required: false
        description: "Additional search parameter:<br/> Search jobs with specified status only"
        schema:
          $ref: "../schemas/jobs.yaml#/jobs.JobStatus"
      - in: query
        name: max_results
        required: false
        description: "Additional search parameter:<br/> Set max number of quantum jobs to return in single request"
        schema:
          type: integer
          nullable: false
          example: 1
      - in: query
        name: timestamp
        description: "Additional search parameter:<br/> Jobs created after the specified timetsamp"
        schema: { type: string, example: "2022-12-15 15:54:46" }
    responses:
      "200":
        description: "List of jobs for a device"
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "../schemas/jobs.yaml#/jobs.JobDef"
      "400":
        description: Bad Request
        content:
          application/json:
            schema:
              $ref: "../schemas/error.yaml#/error.BadRequest"
            example:
              message: Bad request malformed input data
      "500":
        description: Internal Server Error
        content:
          application/json:
            schema:
              $ref: "../schemas/error.yaml#/error.InternalServerError"
            example:
              message: Internal server error

jobs.job_id:
  get:
    summary: Get a job by ID
    description: Get a job by ID
    operationId: get_job
    tags:
      - jobs
    parameters:
      - in: path
        name: job_id
        required: true
        description: "Job identifier"
        schema: { type: string, nullable: false }
    responses:
      "200":
        description: "Return quantum job"
        content:
          application/json:
            schema:
              $ref: "../schemas/jobs.yaml#/jobs.JobDef"
      "400":
        description: Bad Request
        content:
          application/json:
            schema:
              $ref: "../schemas/error.yaml#/error.BadRequest"
            example:
              message: Bad request malformed input data
      "404":
        description: Not Found
        content:
          application/json:
            schema:
              $ref: "../schemas/error.yaml#/error.NotFoundError"
            example:
              message: job not found
jobs.job_status:
  patch:
    summary: "Modify selected quantum job (update status)."
    description: 'Used by device to set job status to "running".<br/>Other statuses are set by CloudAPI automatically when result is created'
    operationId: patch_job
    tags:
      - jobs
    parameters:
      - in: path
        name: job_id
        required: true
        description: "Job identifier"
        schema: { type: string, nullable: false }
    requestBody:
      description: "New job status. "
      content:
        application/json:
          schema:
            $ref: "../schemas/jobs.yaml#/jobs.JobStatusUpdate"
    responses:
      "200":
        description: job data updated
        content:
          application/json:
            schema:
              $ref: "../schemas/jobs.yaml#/jobs.JobStatusUpdateResponse"
            example:
              message: job data updated
      "404":
        description: Not Found
        content:
          application/json:
            schema:
              $ref: "../schemas/error.yaml#/error.NotFoundError"
            example:
              message: Job not found
      "409":
        description: Returned when the specified job is not in a status thatt allows transition to the requested status.
        content:
          application/json:
            schema:
              $ref: "../schemas/error.yaml#/error.ConflictError"
            example:
              message: The specified job is not in a status thatt allows transition to the requested status.
jobs.job_info:
  patch:
    summary: "Update selected quantum job's job_info by placing job results"
    description: |
      Used by device to set results or error details in job_info„ÄÅaccompanied by appropriate status updating.
      Note that job info descriptor (sampling, estimation, etc) cannot be modified.
    operationId: patch_job_info
    tags:
      - jobs
    parameters:
      - in: path
        name: job_id
        required: true
        description: "Job identifier"
        schema: { type: string, nullable: false }
    requestBody:
      description: "Modifications applied to Job info"
      content:
        application/json:
          schema:
            $ref: "../schemas/jobs.yaml#/jobs.UpdateJobInfoRequest"
    responses:
      "200":
        description: job info updated
        content:
          application/json:
            schema:
              $ref: "../schemas/jobs.yaml#/jobs.UpdateJobInfoResponse"
            example:
              message: Job info updated.
      "400":
        description: Bad Request
        content:
          application/json:
            schema:
              $ref: "../schemas/error.yaml#/error.BadRequest"
            example:
              message: Bad request malformed input data
      "404":
        description: Not Found
        content:
          application/json:
            schema:
              $ref: "../schemas/error.yaml#/error.NotFoundError"
            example:
              message: Job not found

jobs.job_id.transpiler_info:
  put:
    summary: "Overwrite selected quantum job's traspiler_info"
    description: |
      Overwrite selected quantum job's transpiler_info.
    operationId: update_job_transpiler_info
    tags:
      - jobs
    parameters:
      - in: path
        name: job_id
        required: true
        description: "Job identifier"
        schema: { type: string, nullable: false }
    requestBody:
      description: "Modifications applied to transpiler info"
      content:
        application/json:
          schema:
            $ref: "../schemas/jobs.yaml#/jobs.UpdateJobTranspilerInfoRequest"
    responses:
      "200":
        description: job info updated
        content:
          application/json:
            schema:
              $ref: "../schemas/jobs.yaml#/jobs.UpdateJobTranspilerInfoResponse"
            example:
              message: Job info updated.
      "400":
        description: Bad Request
        content:
          application/json:
            schema:
              $ref: "../schemas/error.yaml#/error.BadRequest"
            example:
              message: Bad request malformed input data
      "404":
        description: Not Found
        content:
          application/json:
            schema:
              $ref: "../schemas/error.yaml#/error.NotFoundError"
            example:
              message: Job not found


jobs.job_id.sse_src:
  get:
    tags:
      - job
    summary: "Get SSE program source file"
    description: "Get SSE program source file of selected job"
    operationId: get_ssesrc
    parameters:
        - in: path
          name: job_id
          required: true
          description: "Job identifier"
          schema: {type: string}
    responses:
      "200":
        description: "Return SSE program source file"
        content:
          text/plain:
            schema:
              type: string
              format: binary
      "400":
        description: Bad Request
        content:
          application/json:
            schema:
              $ref: "../schemas/error.yaml#/error.BadRequest"
            example:
              message: Bad request malformed input data
      "404":
        description: Not Found
        content:
          application/json:
            schema:
              $ref: "../schemas/error.yaml#/error.NotFoundError"
            example:
              message: job not found
      "500":
        description: Internal Server Error
        content:
          application/json:
            schema:
              $ref: "../schemas/error.yaml#/error.InternalServerError"
            example:
              message: Internal server error

jobs.job_id.sse_log:
  patch:
    tags:
      - job
    summary: "Upload SSE log file"
    description: "Upload SSE log file of selected job"
    operationId: patch_sselog
    parameters:
      - in: path
        name: job_id
        required: true
        description: "Job identifier"
        schema: {type: string}
    requestBody:
      description: "Log file to be uploaded"
      content:
        multipart/form-data:
          schema:
            $ref: "../schemas/jobs.yaml#/jobs.UploadSselogRequest"
    responses:
      "200":
        description: "Log uploaded"
        content:
          application/json:
            schema:
              $ref: "../schemas/jobs.yaml#/jobs.UploadSselogResponse"
            example:
              message: Log uploaded
      "400":
        description: Bad Request
        content:
          application/json:
            schema:
              $ref: "../schemas/error.yaml#/error.BadRequest"
            example:
              message: Bad request malformed input data
      "500":
        description: Internal Server Error
        content:
          application/json:
            schema:
              $ref: "../schemas/error.yaml#/error.InternalServerError"
            example:
              message: Internal server error
